<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scms.teacher.dao.TeacherMapper">
  <resultMap id="BaseResultMap" type="com.scms.entity.Teacher">
    <id column="teacher_id" jdbcType="BIGINT" property="teacherId" />
    <result column="pwd" jdbcType="VARCHAR" property="pwd" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="credit" jdbcType="BIGINT" property="credit" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="teacher_title" jdbcType="VARCHAR" property="teacherTitle" />
    <result column="school_year" jdbcType="TIMESTAMP" property="schoolYear" />
  </resultMap>
  <sql id="Base_Column_List">
    teacher_id, pwd, name, department, sex, age, credit, email, phone, teacher_title, 
    school_year
  </sql>
  <select id="selectAll" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM teacher
  </select>

  <select id="selectByDept" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM teacher
    WHERE department = #{dept, jdbcType=VARCHAR}
  </select>

  <select id="selectSincePrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM teacher
    limit #{teacherId}, 20
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from teacher
    where teacher_id = #{teacherId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from teacher
    where teacher_id = #{teacherId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.scms.entity.Teacher">
    insert into teacher (teacher_id, pwd, name, 
      department, sex, age, 
      credit, email, phone, 
      teacher_title, school_year)
    values (#{teacherId,jdbcType=BIGINT}, #{pwd,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{department,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{credit,jdbcType=BIGINT}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{teacherTitle,jdbcType=VARCHAR}, #{schoolYear,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.scms.entity.Teacher">
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="pwd != null">
        pwd,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="credit != null">
        credit,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="teacherTitle != null">
        teacher_title,
      </if>
      <if test="schoolYear != null">
        school_year,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="teacherId != null">
        #{teacherId,jdbcType=BIGINT},
      </if>
      <if test="pwd != null">
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="credit != null">
        #{credit,jdbcType=BIGINT},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="teacherTitle != null">
        #{teacherTitle,jdbcType=VARCHAR},
      </if>
      <if test="schoolYear != null">
        #{schoolYear,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.scms.entity.Teacher">
    update teacher
    <set>
      <if test="pwd != null">
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="credit != null">
        credit = #{credit,jdbcType=BIGINT},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="teacherTitle != null">
        teacher_title = #{teacherTitle,jdbcType=VARCHAR},
      </if>
      <if test="schoolYear != null">
        school_year = #{schoolYear,jdbcType=TIMESTAMP},
      </if>
    </set>
    where teacher_id = #{teacherId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.scms.entity.Teacher">
    update teacher
    set pwd = #{pwd,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      department = #{department,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      credit = #{credit,jdbcType=BIGINT},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      teacher_title = #{teacherTitle,jdbcType=VARCHAR},
      school_year = #{schoolYear,jdbcType=TIMESTAMP}
    where teacher_id = #{teacherId,jdbcType=BIGINT}
  </update>
</mapper>